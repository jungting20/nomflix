{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresent.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Components/Loader.js","Routes/TV/TVPresent.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresent.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresent.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","Text","props","color","Message","text","propType","PropType","string","isRequired","Image","bgurl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","role","aria-label","length","substring","HomePresenter","nowPlaying","upcoming","popular","loading","error","map","movie","original_title","poster_path","key","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","append_to_response","HomeContainer","state","data","results","this","setState","HomePresent","React","Component","TVPresenter","Loader","show","original_name","TVContainer","console","log","TVPresent","Form","form","Input","input","SearchPresenter","movieResults","tvResults","handleSubmit","searchTerm","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","e","target","a","SearchPresent","Backdrop","bgImage","Content","Cover","DetailPresenter","h3","p","result","backdrop_path","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","DetailPresent","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d501926c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.44305dd5.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-bottom: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropType from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n  font-weight: 600;\n`;\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propType = {\n  text: PropType.string.isRequired,\n  color: PropType.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgurl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 5px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgurl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        ></Image>\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ❤️\n          </span>{\" \"}\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title && title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year></Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool.isRequired\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\nconst Container = styled.div`\n  padding: 0px 10px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) =>\n  loading ? null : (\n    <Container>\n      <Helmet>\n        <title>Movies | Nomflix</title>\n      </Helmet>\n      {nowPlaying && nowPlaying.length > 0 && (\n        <Section title=\"Now Playing\">\n          {nowPlaying.map(movie => (\n            <Poster\n              title={movie.original_title}\n              imageUrl={movie.poster_path}\n              key={movie.id}\n              id={movie.id}\n              rating={movie.vote_average}\n              year={movie.release_date && movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {upcoming && upcoming.length > 0 && (\n        <Section title=\"upcoming Movies\">\n          {upcoming.map(movie => (\n            <Poster\n              title={movie.original_title}\n              imageUrl={movie.poster_path}\n              key={movie.id}\n              id={movie.id}\n              rating={movie.vote_average}\n              year={movie.release_date && movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Movies\">\n          {popular.map(movie => (\n            <Poster\n              title={movie.original_title}\n              imageUrl={movie.poster_path}\n              key={movie.id}\n              id={movie.id}\n              rating={movie.vote_average}\n              year={movie.release_date && movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {error && <Message text={error} color=\"#e74c3c\" />}\n    </Container>\n  );\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"f0d38df289e375ebbc8c140673430068\",\n    language: \"en-US\"\n  }\n});\n//상대경로를 적어야함\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id => api.get(`movie/${id}`),\n  search: term =>\n    api.get(`search/movie`, {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(`search/tv`, {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresent\";\nimport { moviesApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch (error) {\n      this.setState({\n        error: \"Can't find movies information\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 32px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      dpd\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nconst Container = styled.div`\n  padding: 0px 10px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      {topRated && topRated.length > 0 && (\n        <Section title=\"Top Rated Shows\">\n          {topRated.map(show => (\n            <Poster\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              key={show.id}\n              id={show.id}\n              rating={show.vote_average}\n              year={show.release_date && show.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"popular Shows\">\n          {popular.map(show => (\n            <Poster\n              title={show.original_title}\n              imageUrl={show.poster_path}\n              key={show.id}\n              id={show.id}\n              rating={show.vote_average}\n              year={show.release_date && show.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {airingToday && airingToday.length > 0 && (\n        <Section title=\"airingToday Shows\">\n          {airingToday.map(show => (\n            <Poster\n              title={show.original_title}\n              imageUrl={show.poster_path}\n              key={show.id}\n              id={show.id}\n              rating={show.vote_average}\n              year={show.release_date && show.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {error && <Message text={error} color=\"#e74c3c\" />}\n    </Container>\n  );\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresent from \"./TVPresent\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({\n        topRated,\n        popular,\n        airingToday\n      });\n    } catch (error) {\n      this.setState({\n        error: \"Can't find TV information\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    console.log(this.state);\n    return (\n      <TVPresent\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  handleSubmit,\n  searchTerm,\n  updateTerm,\n  error\n}) => (\n  <Container>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or Tv show...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      ></Input>\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                key={movie.id}\n                id={movie.id}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {tvResults.map(show => (\n              <Poster\n                title={show.original_title}\n                imageUrl={show.poster_path}\n                key={show.id}\n                id={show.id}\n                rating={show.vote_average}\n                year={show.release_date && show.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n    {error && <Message text={error} color=\"#e74c3c\" />}\n    {tvResults &&\n      movieResults &&\n      tvResults.length === 0 &&\n      movieResults.length === 0 && (\n        <Message text=\"Nothing found\" color=\"#95a5a6\" />\n      )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresent\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm(searchTerm);\n    }\n  };\n\n  updateTerm = e => {\n    const {\n      target: { value }\n    } = e;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async term => {\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(term);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(term);\n      this.setState({ loading: true, movieResults, tvResults });\n    } catch (error) {\n      this.setState({ error: \"못찾음\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: relative;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-top: 10px;\n`;\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        ></Cover>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresent\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push },\n      location: { pathname }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"못찾아버렸어\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    //console.log(id);\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 0;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 1px 5px 2px rgba(20, 20, 20, 0.8);\n`;\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 50px;\n  text-align: center;\n  height: 50px;\n  border-bottom: 5px solid\n    ${props => (props.current ? \"#3498db\" : \"transeparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">Tv</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\nimport Header from \"Components/Header\";\n\n//exact는 정확하게 일치할때만 보여줌 스위치 안에 저게없으면 /tv나 /tv/popular 이나 같은거를 보여준다\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home}></Route>\n        <Route path=\"/tv\" exact component={TV}></Route>\n        {/* <Route path=\"/tv/popular\" render={() => <h1>Popular</h1>}></Route> */}\n        <Route path=\"/search\" exact component={Search}></Route>\n        <Route path=\"/movie/:id\" component={Detail}></Route>\n        <Route path=\"/show/:id\" component={Detail}></Route>\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n${reset};\na{\n    text-decoration: none;\n    color: inherit;\n}\n*{\n    box-sizing: border-box;\n}\nbody{\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 14px;\n    background-color: rgba(20, 20, 20, 1);\n    color:white;\n    padding-top:50px;\n}\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}